// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Signup /> User should call function when click on button and fields are filled 1`] = `
<WithStyles(Grid)
  className="Signup-root-1"
  container={true}
>
  <WithStyles(Grid)
    item={true}
    xs={12}
  >
    <WithStyles(Grid)
      container={true}
      direction="row"
      justify="flex-start"
      spacing={0}
    >
      <WithStyles(Grid)
        item={true}
        lg={8}
        md={7}
        sm={12}
        xl={8}
        xs={12}
      >
        <WithStyles(Paper)
          className="Signup-paper-2 Signup-backgroundGreen-3"
          elevation={0}
          style={
            Object {
              "paddingBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <div>
            <WithStyles(Typography)
              gutterBottom={true}
              style={
                Object {
                  "color": "white",
                }
              }
              variant="display1"
            >
              Welcome to the best open source plataform for lean management
            </WithStyles(Typography)>
            <WithStyles(Typography)
              gutterBottom={true}
              style={
                Object {
                  "color": "white",
                }
              }
              variant="headline"
            >
              Align strategy and execution with
              <b>
                OKRs
              </b>
               and

              <b>
                Kanban
              </b>
               for you, your team and your company.
            </WithStyles(Typography)>
          </div>
        </WithStyles(Paper)>
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        lg={4}
        md={5}
        sm={12}
        xl={4}
        xs={12}
      >
        <WithStyles(Paper)
          className="Signup-paper-2"
          elevation={0}
          style={
            Object {
              "paddingBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <div
            style={
              Object {
                "margin": "0 auto",
                "width": "80%",
              }
            }
          >
            <WithStyles(Typography)
              align="center"
              color="primary"
              gutterBottom={true}
              variant="display1"
            >
              <b>
                WIPLean
              </b>
            </WithStyles(Typography)>
            <WithStyles(Typography)
              component="p"
              gutterBottom={true}
            >
              Create your account and starts to improvement your results.
            </WithStyles(Typography)>
            <div
              style={
                Object {
                  "textAlign": "center",
                  "width": "100%",
                }
              }
            >
              <TextField
                InputProps={
                  Object {
                    "endAdornment": <WithStyles(WithFormControlContext(InputAdornment))
                      position="end"
                    >
                      <pure(EmailIcon) />
                    </WithStyles(WithFormControlContext(InputAdornment))>,
                  }
                }
                className="Signup-text-4"
                error={false}
                label="Type your email"
                onChange={[Function]}
                required={false}
                select={false}
                variant="standard"
              />
              <TextField
                InputProps={
                  Object {
                    "endAdornment": <WithStyles(WithFormControlContext(InputAdornment))
                      position="end"
                    >
                      <pure(HttpsIcon) />
                    </WithStyles(WithFormControlContext(InputAdornment))>,
                  }
                }
                className="Signup-text-4"
                error={false}
                label="Password"
                onChange={[Function]}
                required={false}
                select={false}
                type="password"
                variant="standard"
              />
              <TextField
                InputProps={
                  Object {
                    "endAdornment": <WithStyles(WithFormControlContext(InputAdornment))
                      position="end"
                    >
                      <pure(HttpsIcon) />
                    </WithStyles(WithFormControlContext(InputAdornment))>,
                  }
                }
                className="Signup-text-4"
                error={false}
                helperText=""
                label="Confirm password"
                onChange={[Function]}
                required={false}
                select={false}
                type="password"
                variant="standard"
              />
              <div
                style={
                  Object {
                    "textAlign": "right",
                  }
                }
              >
                <br />
                <div
                  className="Signup-wrapper-8"
                >
                  <WithStyles(Button)
                    className=""
                    color="primary"
                    onClick={[Function]}
                    size="large"
                    variant="raised"
                  >
                    Sign Up
                    <pure(CheckIcon) />
                  </WithStyles(Button)>
                  <br />
                </div>
                <br />
                <WithStyles(Typography)
                  align="right"
                  color="primary"
                  component="p"
                  gutterBottom={true}
                >
                  Already have an account ?

                  <Link
                    className="Signup-link-5"
                    to="/login"
                  >
                    <b>
                      Sign in!
                    </b>
                  </Link>
                </WithStyles(Typography)>
              </div>
            </div>
          </div>
        </WithStyles(Paper)>
      </WithStyles(Grid)>
    </WithStyles(Grid)>
  </WithStyles(Grid)>
</WithStyles(Grid)>
`;

exports[`<Signup /> User should not call function when click on button and fields are empty 1`] = `
<WithStyles(Grid)
  className="Signup-root-1"
  container={true}
>
  <WithStyles(Grid)
    item={true}
    xs={12}
  >
    <WithStyles(Grid)
      container={true}
      direction="row"
      justify="flex-start"
      spacing={0}
    >
      <WithStyles(Grid)
        item={true}
        lg={8}
        md={7}
        sm={12}
        xl={8}
        xs={12}
      >
        <WithStyles(Paper)
          className="Signup-paper-2 Signup-backgroundGreen-3"
          elevation={0}
          style={
            Object {
              "paddingBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <div>
            <WithStyles(Typography)
              gutterBottom={true}
              style={
                Object {
                  "color": "white",
                }
              }
              variant="display1"
            >
              Welcome to the best open source plataform for lean management
            </WithStyles(Typography)>
            <WithStyles(Typography)
              gutterBottom={true}
              style={
                Object {
                  "color": "white",
                }
              }
              variant="headline"
            >
              Align strategy and execution with
              <b>
                OKRs
              </b>
               and

              <b>
                Kanban
              </b>
               for you, your team and your company.
            </WithStyles(Typography)>
          </div>
        </WithStyles(Paper)>
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        lg={4}
        md={5}
        sm={12}
        xl={4}
        xs={12}
      >
        <WithStyles(Paper)
          className="Signup-paper-2"
          elevation={0}
          style={
            Object {
              "paddingBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <div
            style={
              Object {
                "margin": "0 auto",
                "width": "80%",
              }
            }
          >
            <WithStyles(Typography)
              align="center"
              color="primary"
              gutterBottom={true}
              variant="display1"
            >
              <b>
                WIPLean
              </b>
            </WithStyles(Typography)>
            <WithStyles(Typography)
              component="p"
              gutterBottom={true}
            >
              Create your account and starts to improvement your results.
            </WithStyles(Typography)>
            <div
              style={
                Object {
                  "textAlign": "center",
                  "width": "100%",
                }
              }
            >
              <TextField
                InputProps={
                  Object {
                    "endAdornment": <WithStyles(WithFormControlContext(InputAdornment))
                      position="end"
                    >
                      <pure(EmailIcon) />
                    </WithStyles(WithFormControlContext(InputAdornment))>,
                  }
                }
                className="Signup-text-4"
                error={true}
                label="Type your email"
                onChange={[Function]}
                required={false}
                select={false}
                variant="standard"
              />
              <TextField
                InputProps={
                  Object {
                    "endAdornment": <WithStyles(WithFormControlContext(InputAdornment))
                      position="end"
                    >
                      <pure(HttpsIcon) />
                    </WithStyles(WithFormControlContext(InputAdornment))>,
                  }
                }
                className="Signup-text-4"
                error={true}
                label="Password"
                onChange={[Function]}
                required={false}
                select={false}
                type="password"
                variant="standard"
              />
              <TextField
                InputProps={
                  Object {
                    "endAdornment": <WithStyles(WithFormControlContext(InputAdornment))
                      position="end"
                    >
                      <pure(HttpsIcon) />
                    </WithStyles(WithFormControlContext(InputAdornment))>,
                  }
                }
                className="Signup-text-4"
                error={true}
                helperText=""
                label="Confirm password"
                onChange={[Function]}
                required={false}
                select={false}
                type="password"
                variant="standard"
              />
              <div
                style={
                  Object {
                    "textAlign": "right",
                  }
                }
              >
                <br />
                <div
                  className="Signup-wrapper-8"
                >
                  <WithStyles(Button)
                    className=""
                    color="primary"
                    onClick={[Function]}
                    size="large"
                    variant="raised"
                  >
                    Sign Up
                    <pure(CheckIcon) />
                  </WithStyles(Button)>
                  <br />
                </div>
                <br />
                <WithStyles(Typography)
                  align="right"
                  color="primary"
                  component="p"
                  gutterBottom={true}
                >
                  Already have an account ?

                  <Link
                    className="Signup-link-5"
                    to="/login"
                  >
                    <b>
                      Sign in!
                    </b>
                  </Link>
                </WithStyles(Typography)>
              </div>
            </div>
          </div>
        </WithStyles(Paper)>
      </WithStyles(Grid)>
    </WithStyles(Grid)>
  </WithStyles(Grid)>
</WithStyles(Grid)>
`;

exports[`<Signup /> User should not call function when fields password and confirmPassword are different 1`] = `
<WithStyles(Grid)
  className="Signup-root-1"
  container={true}
>
  <WithStyles(Grid)
    item={true}
    xs={12}
  >
    <WithStyles(Grid)
      container={true}
      direction="row"
      justify="flex-start"
      spacing={0}
    >
      <WithStyles(Grid)
        item={true}
        lg={8}
        md={7}
        sm={12}
        xl={8}
        xs={12}
      >
        <WithStyles(Paper)
          className="Signup-paper-2 Signup-backgroundGreen-3"
          elevation={0}
          style={
            Object {
              "paddingBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <div>
            <WithStyles(Typography)
              gutterBottom={true}
              style={
                Object {
                  "color": "white",
                }
              }
              variant="display1"
            >
              Welcome to the best open source plataform for lean management
            </WithStyles(Typography)>
            <WithStyles(Typography)
              gutterBottom={true}
              style={
                Object {
                  "color": "white",
                }
              }
              variant="headline"
            >
              Align strategy and execution with
              <b>
                OKRs
              </b>
               and

              <b>
                Kanban
              </b>
               for you, your team and your company.
            </WithStyles(Typography)>
          </div>
        </WithStyles(Paper)>
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        lg={4}
        md={5}
        sm={12}
        xl={4}
        xs={12}
      >
        <WithStyles(Paper)
          className="Signup-paper-2"
          elevation={0}
          style={
            Object {
              "paddingBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <div
            style={
              Object {
                "margin": "0 auto",
                "width": "80%",
              }
            }
          >
            <WithStyles(Typography)
              align="center"
              color="primary"
              gutterBottom={true}
              variant="display1"
            >
              <b>
                WIPLean
              </b>
            </WithStyles(Typography)>
            <WithStyles(Typography)
              component="p"
              gutterBottom={true}
            >
              Create your account and starts to improvement your results.
            </WithStyles(Typography)>
            <div
              style={
                Object {
                  "textAlign": "center",
                  "width": "100%",
                }
              }
            >
              <TextField
                InputProps={
                  Object {
                    "endAdornment": <WithStyles(WithFormControlContext(InputAdornment))
                      position="end"
                    >
                      <pure(EmailIcon) />
                    </WithStyles(WithFormControlContext(InputAdornment))>,
                  }
                }
                className="Signup-text-4"
                error={false}
                label="Type your email"
                onChange={[Function]}
                required={false}
                select={false}
                variant="standard"
              />
              <TextField
                InputProps={
                  Object {
                    "endAdornment": <WithStyles(WithFormControlContext(InputAdornment))
                      position="end"
                    >
                      <pure(HttpsIcon) />
                    </WithStyles(WithFormControlContext(InputAdornment))>,
                  }
                }
                className="Signup-text-4"
                error={true}
                label="Password"
                onChange={[Function]}
                required={false}
                select={false}
                type="password"
                variant="standard"
              />
              <TextField
                InputProps={
                  Object {
                    "endAdornment": <WithStyles(WithFormControlContext(InputAdornment))
                      position="end"
                    >
                      <pure(HttpsIcon) />
                    </WithStyles(WithFormControlContext(InputAdornment))>,
                  }
                }
                className="Signup-text-4"
                error={true}
                helperText="The password and confirm password fiedls are differents"
                label="Confirm password"
                onChange={[Function]}
                required={false}
                select={false}
                type="password"
                variant="standard"
              />
              <div
                style={
                  Object {
                    "textAlign": "right",
                  }
                }
              >
                <br />
                <div
                  className="Signup-wrapper-8"
                >
                  <WithStyles(Button)
                    className=""
                    color="primary"
                    onClick={[Function]}
                    size="large"
                    variant="raised"
                  >
                    Sign Up
                    <pure(CheckIcon) />
                  </WithStyles(Button)>
                  <br />
                </div>
                <br />
                <WithStyles(Typography)
                  align="right"
                  color="primary"
                  component="p"
                  gutterBottom={true}
                >
                  Already have an account ?

                  <Link
                    className="Signup-link-5"
                    to="/login"
                  >
                    <b>
                      Sign in!
                    </b>
                  </Link>
                </WithStyles(Typography)>
              </div>
            </div>
          </div>
        </WithStyles(Paper)>
      </WithStyles(Grid)>
    </WithStyles(Grid)>
  </WithStyles(Grid)>
</WithStyles(Grid)>
`;

exports[`<Signup /> User should render a component correctly 1`] = `undefined`;

exports[`<Signup /> User should return a redirect component, bacause success prop is defined 1`] = `
<Redirect
  to="/account-created"
/>
`;

exports[`<Signup /> User should to change state when type in TextField 1`] = `
<WithStyles(Grid)
  className="Signup-root-1"
  container={true}
>
  <WithStyles(Grid)
    item={true}
    xs={12}
  >
    <WithStyles(Grid)
      container={true}
      direction="row"
      justify="flex-start"
      spacing={0}
    >
      <WithStyles(Grid)
        item={true}
        lg={8}
        md={7}
        sm={12}
        xl={8}
        xs={12}
      >
        <WithStyles(Paper)
          className="Signup-paper-2 Signup-backgroundGreen-3"
          elevation={0}
          style={
            Object {
              "paddingBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <div>
            <WithStyles(Typography)
              gutterBottom={true}
              style={
                Object {
                  "color": "white",
                }
              }
              variant="display1"
            >
              Welcome to the best open source plataform for lean management
            </WithStyles(Typography)>
            <WithStyles(Typography)
              gutterBottom={true}
              style={
                Object {
                  "color": "white",
                }
              }
              variant="headline"
            >
              Align strategy and execution with
              <b>
                OKRs
              </b>
               and

              <b>
                Kanban
              </b>
               for you, your team and your company.
            </WithStyles(Typography)>
          </div>
        </WithStyles(Paper)>
      </WithStyles(Grid)>
      <WithStyles(Grid)
        item={true}
        lg={4}
        md={5}
        sm={12}
        xl={4}
        xs={12}
      >
        <WithStyles(Paper)
          className="Signup-paper-2"
          elevation={0}
          style={
            Object {
              "paddingBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          <div
            style={
              Object {
                "margin": "0 auto",
                "width": "80%",
              }
            }
          >
            <WithStyles(Typography)
              align="center"
              color="primary"
              gutterBottom={true}
              variant="display1"
            >
              <b>
                WIPLean
              </b>
            </WithStyles(Typography)>
            <WithStyles(Typography)
              component="p"
              gutterBottom={true}
            >
              Create your account and starts to improvement your results.
            </WithStyles(Typography)>
            <div
              style={
                Object {
                  "textAlign": "center",
                  "width": "100%",
                }
              }
            >
              <TextField
                InputProps={
                  Object {
                    "endAdornment": <WithStyles(WithFormControlContext(InputAdornment))
                      position="end"
                    >
                      <pure(EmailIcon) />
                    </WithStyles(WithFormControlContext(InputAdornment))>,
                  }
                }
                className="Signup-text-4"
                error={false}
                label="Type your email"
                onChange={[Function]}
                required={false}
                select={false}
                variant="standard"
              />
              <TextField
                InputProps={
                  Object {
                    "endAdornment": <WithStyles(WithFormControlContext(InputAdornment))
                      position="end"
                    >
                      <pure(HttpsIcon) />
                    </WithStyles(WithFormControlContext(InputAdornment))>,
                  }
                }
                className="Signup-text-4"
                error={false}
                label="Password"
                onChange={[Function]}
                required={false}
                select={false}
                type="password"
                variant="standard"
              />
              <TextField
                InputProps={
                  Object {
                    "endAdornment": <WithStyles(WithFormControlContext(InputAdornment))
                      position="end"
                    >
                      <pure(HttpsIcon) />
                    </WithStyles(WithFormControlContext(InputAdornment))>,
                  }
                }
                className="Signup-text-4"
                error={false}
                helperText=""
                label="Confirm password"
                onChange={[Function]}
                required={false}
                select={false}
                type="password"
                variant="standard"
              />
              <div
                style={
                  Object {
                    "textAlign": "right",
                  }
                }
              >
                <br />
                <div
                  className="Signup-wrapper-8"
                >
                  <WithStyles(Button)
                    className=""
                    color="primary"
                    onClick={[Function]}
                    size="large"
                    variant="raised"
                  >
                    Sign Up
                    <pure(CheckIcon) />
                  </WithStyles(Button)>
                  <br />
                </div>
                <br />
                <WithStyles(Typography)
                  align="right"
                  color="primary"
                  component="p"
                  gutterBottom={true}
                >
                  Already have an account ?

                  <Link
                    className="Signup-link-5"
                    to="/login"
                  >
                    <b>
                      Sign in!
                    </b>
                  </Link>
                </WithStyles(Typography)>
              </div>
            </div>
          </div>
        </WithStyles(Paper)>
      </WithStyles(Grid)>
    </WithStyles(Grid)>
  </WithStyles(Grid)>
</WithStyles(Grid)>
`;
